{"version":3,"file":"735.bundle.js","mappings":"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","sources":["webpack://model-registry-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/eye-icon.js","webpack://model-registry-ui/./src/app/api/k8s.ts","webpack://model-registry-ui/./src/app/pages/modelRegistry/screens/components/FormFieldset.tsx","webpack://model-registry-ui/./node_modules/mod-arch-shared/dist/components/NotebookController.scss?1527","webpack://model-registry-ui/./node_modules/mod-arch-shared/dist/components/ResourceNameTooltip.js","webpack://model-registry-ui/./src/app/context/AppContext.ts","webpack://model-registry-ui/./node_modules/mod-arch-core/dist/api/k8s.js","webpack://model-registry-ui/./node_modules/mod-arch-shared/dist/components/NotebookController.scss","webpack://model-registry-ui/./node_modules/mod-arch-shared/dist/components/FieldGroupHelpLabelIcon.js","webpack://model-registry-ui/./node_modules/mod-arch-core/dist/types/common.js","webpack://model-registry-ui/./node_modules/mod-arch-shared/dist/components/design/HeaderIcon.js","webpack://model-registry-ui/./src/app/hooks/useModelRegistries.ts","webpack://model-registry-ui/./src/app/context/ModelRegistrySelectorContext.tsx","webpack://model-registry-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/eye-slash-icon.js","webpack://model-registry-ui/./src/app/utilities/const.ts","webpack://model-registry-ui/./src/odh/ModelRegistrySettingsRoutesWrapper.tsx","webpack://model-registry-ui/./node_modules/@patternfly/react-icons/dist/esm/icons/in-progress-icon.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const EyeIconConfig = {\n  name: 'EyeIcon',\n  height: 512,\n  width: 576,\n  svgPath: \"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\",\n  yOffset: 0,\n  xOffset: 0,\n  svgClassName: undefined,\n};\n\nexport const EyeIcon = createIcon(EyeIconConfig);\n\nexport default EyeIcon;","import {\n  ModelRegistryKind,\n  GroupKind,\n  RoleBindingKind,\n  K8sResourceCommon,\n  RoleBindingSubject,\n  RoleBindingRoleRef,\n  genRandomChars,\n} from 'mod-arch-shared';\nimport {\n  APIOptions,\n  handleRestFailures,\n  UserSettings,\n  assembleModArchBody,\n  isModArchResponse,\n  restCREATE,\n  restDELETE,\n  restGET,\n  restPATCH,\n} from 'mod-arch-core';\nimport { ModelRegistry, ModelRegistryPayload } from '~/app/types';\nimport { BFF_API_VERSION, URL_PREFIX } from '~/app/utilities/const';\nimport { RoleBindingPermissionsRoleType } from '~/app/pages/settings/roleBinding/types';\nimport { ListConfigSecretsResponse, NamespaceKind } from '~/app/shared/components/types';\n\nexport type ModelRegistryAndCredentials = {\n  modelRegistry: ModelRegistryKind;\n  databasePassword?: string;\n  newDatabaseCACertificate?: string;\n};\n\nexport const getListModelRegistries =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions): Promise<ModelRegistry[]> =>\n    handleRestFailures(\n      restGET(hostPath, `${URL_PREFIX}/api/${BFF_API_VERSION}/model_registry`, queryParams, opts),\n    ).then((response) => {\n      if (isModArchResponse<ModelRegistry[]>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const getUser =\n  (hostPath: string) =>\n  (opts: APIOptions): Promise<UserSettings> =>\n    handleRestFailures(\n      restGET(hostPath, `${URL_PREFIX}/api/${BFF_API_VERSION}/user`, {}, opts),\n    ).then((response) => {\n      if (isModArchResponse<UserSettings>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const getNamespaces =\n  (hostPath: string) =>\n  (opts: APIOptions): Promise<NamespaceKind[]> =>\n    handleRestFailures(\n      restGET(hostPath, `${URL_PREFIX}/api/${BFF_API_VERSION}/namespaces`, {}, opts),\n    ).then((response) => {\n      if (isModArchResponse<NamespaceKind[]>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const getNamespacesForSettings =\n  (hostPath: string) =>\n  (opts: APIOptions): Promise<NamespaceKind[]> =>\n    handleRestFailures(\n      restGET(hostPath, `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/namespaces`, {}, opts),\n    ).then((response) => {\n      if (isModArchResponse<NamespaceKind[]>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const getGroups =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions): Promise<GroupKind[]> =>\n    handleRestFailures(\n      restGET(hostPath, `${URL_PREFIX}/api/${BFF_API_VERSION}/groups`, queryParams, opts),\n    ).then((response) => {\n      if (isModArchResponse<GroupKind[]>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const getRoleBindings =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions): Promise<RoleBindingKind[]> =>\n    handleRestFailures(\n      restGET(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/role_bindings`,\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<{ items: RoleBindingKind[] }>(response)) {\n        return response.data.items;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const getModelRegistrySettings =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions, modelRegistryId: string): Promise<ModelRegistryAndCredentials> =>\n    handleRestFailures(\n      restGET(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/model_registry/${modelRegistryId}`,\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<ModelRegistryAndCredentials>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const listModelRegistrySettings =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions): Promise<ModelRegistryKind[]> =>\n    handleRestFailures(\n      restGET(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/model_registry`,\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<ModelRegistryKind[]>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const createModelRegistrySettings =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions, data: ModelRegistryPayload): Promise<ModelRegistryKind> =>\n    handleRestFailures(\n      restCREATE(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/model_registry`,\n        assembleModArchBody(data),\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<ModelRegistryKind>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const deleteModelRegistrySettings =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (\n    opts: APIOptions,\n    data: ModelRegistryKind,\n    modelRegistryId: string,\n  ): Promise<ModelRegistryKind[]> =>\n    handleRestFailures(\n      restDELETE(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/model_registry/${modelRegistryId}`,\n        assembleModArchBody(data),\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<ModelRegistryKind[]>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const patchModelRegistrySettings =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (\n    opts: APIOptions,\n    data: ModelRegistryKind,\n    modelRegistryId: string,\n  ): Promise<ModelRegistryKind[]> =>\n    handleRestFailures(\n      restPATCH(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/model_registry/${modelRegistryId}`,\n        assembleModArchBody(data),\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<ModelRegistryKind[]>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const createRoleBinding =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions, data: RoleBindingKind): Promise<RoleBindingKind> =>\n    handleRestFailures(\n      restCREATE(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/role_bindings`,\n        assembleModArchBody(data),\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<RoleBindingKind>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const patchRoleBinding =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions, data: RoleBindingKind, roleBindingName: string): Promise<RoleBindingKind> =>\n    handleRestFailures(\n      restPATCH(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/role_bindings/${roleBindingName}`,\n        assembleModArchBody(data),\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<RoleBindingKind>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\nexport const deleteRoleBinding =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions, roleBindingName: string): Promise<void> =>\n    handleRestFailures(\n      restDELETE(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/role_bindings/${roleBindingName}`,\n        {},\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<void>(response)) {\n        return response.data;\n      }\n      throw new Error('Invalid response format');\n    });\n\n//TODO : migrate this to shared library\nexport const addOwnerReference = <R extends K8sResourceCommon>(\n  resource: R,\n  owner?: K8sResourceCommon,\n  blockOwnerDeletion = false,\n): R => {\n  if (!owner) {\n    return resource;\n  }\n  const ownerReferences = resource.metadata?.ownerReferences || [];\n  if (\n    owner.metadata?.uid &&\n    owner.metadata.name &&\n    !ownerReferences.find((r) => r.uid === owner.metadata?.uid)\n  ) {\n    ownerReferences.push({\n      uid: owner.metadata.uid,\n      name: owner.metadata.name,\n      apiVersion: owner.apiVersion,\n      kind: owner.kind,\n      blockOwnerDeletion,\n    });\n  }\n  return {\n    ...resource,\n    metadata: {\n      ...resource.metadata,\n      ownerReferences,\n    },\n  };\n};\n\nexport const generateRoleBindingPermissions = (\n  namespace: string,\n  rbSubjectKind: RoleBindingSubject['kind'],\n  rbSubjectName: RoleBindingSubject['name'],\n  rbRoleRefName: RoleBindingPermissionsRoleType | string, //string because with MR this can include MR name\n  rbRoleRefKind: RoleBindingRoleRef['kind'],\n  rbLabels?: { [key: string]: string },\n  ownerReference?: K8sResourceCommon,\n): RoleBindingKind => {\n  const roleBindingObject: RoleBindingKind = {\n    apiVersion: 'rbac.authorization.k8s.io/v1',\n    kind: 'RoleBinding',\n    metadata: {\n      name: `dashboard-permissions-${genRandomChars()}`,\n      namespace,\n      labels: rbLabels,\n    },\n    roleRef: {\n      apiGroup: 'rbac.authorization.k8s.io',\n      kind: rbRoleRefKind,\n      name: rbRoleRefName,\n    },\n    subjects: [\n      {\n        apiGroup: 'rbac.authorization.k8s.io',\n        kind: rbSubjectKind,\n        name: rbSubjectName,\n      },\n    ],\n  };\n  return addOwnerReference(roleBindingObject, ownerReference);\n};\n\nexport const listModelRegistryCertificateNames =\n  (hostPath: string, queryParams: Record<string, unknown> = {}) =>\n  (opts: APIOptions): Promise<ListConfigSecretsResponse> =>\n    handleRestFailures(\n      restGET(\n        hostPath,\n        `${URL_PREFIX}/api/${BFF_API_VERSION}/settings/certificates`,\n        queryParams,\n        opts,\n      ),\n    ).then((response) => {\n      if (isModArchResponse<{ items: ListConfigSecretsResponse }>(response)) {\n        return response.data.items;\n      }\n      throw new Error('Invalid response format');\n    });\n","import { useThemeContext } from 'mod-arch-kubeflow';\nimport React, { ReactNode } from 'react';\n\ninterface FormFieldsetProps {\n  component: ReactNode;\n  field?: string;\n  className?: string;\n}\n\nconst FormFieldset: React.FC<FormFieldsetProps> = ({ component, field, className }) => {\n  const { isMUITheme } = useThemeContext();\n\n  if (!isMUITheme) {\n    return <>{component}</>;\n  }\n\n  return (\n    <div className={className ?? 'form-fieldset-wrapper'}>\n      {component}\n      <fieldset aria-hidden=\"true\" className=\"form-fieldset\">\n        {field && (\n          <legend className=\"form-fieldset-legend\">\n            <span>{field}</span>\n          </legend>\n        )}\n      </fieldset>\n    </div>\n  );\n};\n\nexport default FormFieldset;\n","\n      import API from \"!../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../css-loader/dist/cjs.js!../../../sass-loader/dist/cjs.js!./NotebookController.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../css-loader/dist/cjs.js!../../../sass-loader/dist/cjs.js!./NotebookController.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from 'react';\nimport { ClipboardCopy, DescriptionList, DescriptionListDescription, DescriptionListGroup, DescriptionListTerm, Flex, FlexItem, Popover, Stack, StackItem, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport '../components/NotebookController.scss';\nimport DashboardPopupIconButton from '../components/dashboard/DashboardPopupIconButton';\nconst ResourceNameTooltip = ({ children, resource, wrap = true, }) => (React.createElement(\"div\", { style: { display: wrap ? 'block' : 'inline-flex' } },\n    React.createElement(Flex, { gap: { default: 'gapXs' }, alignItems: { default: 'alignItemsCenter' } },\n        React.createElement(FlexItem, null, children),\n        resource.metadata?.name && (React.createElement(Popover, { position: \"right\", bodyContent: React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null, \"Resource names and types are used to find your resources in the cluster.\"),\n                React.createElement(StackItem, null,\n                    React.createElement(DescriptionList, { isCompact: true, isHorizontal: true },\n                        React.createElement(DescriptionListGroup, null,\n                            React.createElement(DescriptionListTerm, null, \"Resource name\"),\n                            React.createElement(DescriptionListDescription, null,\n                                React.createElement(ClipboardCopy, { hoverTip: \"Copy\", clickTip: \"Copied\", variant: \"inline-compact\", \"data-testid\": \"resource-name-text\" }, resource.metadata.name))),\n                        React.createElement(DescriptionListGroup, null,\n                            React.createElement(DescriptionListTerm, null, \"Resource type\"),\n                            React.createElement(DescriptionListDescription, { \"data-testid\": \"resource-kind-text\" }, resource.kind))))) },\n            React.createElement(DashboardPopupIconButton, { \"data-testid\": \"resource-name-icon-button\", icon: React.createElement(OutlinedQuestionCircleIcon, null), \"aria-label\": \"More info\", style: { paddingTop: 0, paddingBottom: 0 } }))))));\nexport default ResourceNameTooltip;\n//# sourceMappingURL=ResourceNameTooltip.js.map","import * as React from 'react';\nimport { UserSettings, ConfigSettings } from 'mod-arch-core';\n\ntype AppContextProps = {\n  config: ConfigSettings;\n  user: UserSettings;\n};\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\nexport const AppContext = React.createContext({} as AppContextProps);\n\nexport const useAppContext = (): AppContextProps => React.useContext(AppContext);\n","import { handleRestFailures } from '../api/errorUtils';\nimport { isModArchResponse, restGET } from '../api/apiUtils';\n// Functions now accept config object\nexport const getUser = (hostPath, config) => (opts) => handleRestFailures(restGET(hostPath, `${config.URL_PREFIX}/api/${config.BFF_API_VERSION}/user`, {}, opts)).then((response) => {\n    if (isModArchResponse(response)) {\n        return response.data;\n    }\n    throw new Error('Invalid response format');\n});\nexport const getNamespaces = (hostPath, config) => (opts) => handleRestFailures(restGET(hostPath, `${config.URL_PREFIX}/api/${config.BFF_API_VERSION}/namespaces`, {}, opts)).then((response) => {\n    if (isModArchResponse(response)) {\n        return response.data;\n    }\n    throw new Error('Invalid response format');\n});\n//# sourceMappingURL=k8s.js.map","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.kubeflow-notebook-controller__page-content{max-width:1000px}.kubeflow-notebook-controller__page .pf-v6-c-menu-toggle{width:70%}.kubeflow-notebook-controller__page .pf-v6-c-form__section:not(:first-child){margin-top:var(--pf-t--global--spacer--sm);padding-top:var(--pf-t--global--spacer--sm);border-top:1px solid var(--pf-t--global--border--color--default)}.kubeflow-notebook-controller__env-var{gap:var(--pf-t--global--spacer--gutter--default)}.kubeflow-notebook-controller__env-var .pf-v6-c-form__section-title{margin-bottom:var(--pf-t--global--spacer--sm)}.kubeflow-notebook-controller__env-var-add-button{margin-left:var(--pf-t--global--spacer--md)}.kubeflow-notebook-controller__env-var-row{width:85%}.kubeflow-notebook-controller__env-var-row .pf-v6-c-menu-toggle{width:70%}.kubeflow-notebook-controller__env-var-row~.kubeflow-notebook-controller__env-var-row{padding-top:var(--pf-t--global--spacer--md);border-top:1px solid var(--pf-t--global--border--color--default)}.kubeflow-notebook-controller__env-var-field{margin-left:var(--pf-t--global--spacer--md)}.kubeflow-notebook-controller__env-var-field .pf-v6-c-form-control,.kubeflow-notebook-controller__env-var-field .pf-v6-c-input-group{width:70%}.kubeflow-notebook-controller__env-var-field__value .pf-v6-c-form-control{width:100%}.kubeflow-notebook-controller__server-details-title{font-size:var(--pf-t--global--font--size--lg);padding-bottom:var(--pf-t--global--spacer--md)}.kubeflow-notebook-controller__server-details-image-name{padding-bottom:var(--pf-t--global--spacer--md)}.kubeflow-notebook-controller__server-details .pf-v6-c-description-list{font-size:small;padding-bottom:var(--pf-t--global--spacer--xl)}.kubeflow-notebook-controller__notebook-image-option .pf-v6-c-radio__label{white-space:nowrap}.kubeflow-notebook-controller__notebook-image-tags{margin-left:var(--pf-t--global--spacer--md)}.kubeflow-notebook-controller__notebook-image-tags .pf-v6-c-expandable-section__content{margin-top:0;margin-left:var(--pf-t--global--spacer--md)}.kubeflow-notebook-controller__notebook-image-tags .kubeflow-data-projects__notebook-image-option:not(:last-of-type){margin-bottom:var(--pf-t--global--spacer--sm)}.kubeflow-notebook-controller__notebook-image-title>svg,.kubeflow-notebook-controller__notebook-image-title-version{margin-left:var(--pf-t--global--spacer--xs)}.kubeflow-notebook-controller__notebook-image-title .pf-v6-c-label{margin-left:var(--pf-t--global--spacer--sm)}.kubeflow-notebook-controller__notebook-image-popover-title{font-weight:var(--pf-t--global--font--weight--heading--bold);margin-bottom:var(--pf-t--global--spacer--sm)}.kubeflow-notebook-controller__notebook-image-popover-package-title{font-weight:var(--pf-t--global--font--weight--heading--bold)}.kubeflow-notebook-controller__start-server-modal .pf-v6-c-list{font-size:var(--pf-t--global--font--size--body--sm)}.kubeflow-notebook-controller__start-server-modal .pf-v6-c-expandable-section{width:100%;padding-right:var(--pf-t--global--spacer--lg);margin-top:var(--pf-t--global--spacer--sm)}.kubeflow-notebook-controller__start-server-modal .pf-v6-c-expandable-section__content{margin-top:0;max-height:250px;overflow:auto}.kubeflow-notebook-controller__start-server-modal .pf-v6-c-progress{margin-bottom:var(--pf-t--global--spacer--md)}.kubeflow-notebook-controller__start-server-modal .pf-v6-c-alert{margin-bottom:var(--pf-t--global--spacer--md)}`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/mod-arch-shared/dist/components/NotebookController.scss\"],\"names\":[],\"mappings\":\"AAEI,4CACE,gBAAA,CAEF,yDACE,SAAA,CAEF,6EACE,0CAAA,CACA,2CAAA,CACA,gEAAA,CAGJ,uCACE,gDAAA,CACA,oEACE,6CAAA,CAEF,kDACE,2CAAA,CAEF,2CACE,SAAA,CACA,gEACE,SAAA,CAEF,sFACE,2CAAA,CACA,gEAAA,CAGJ,6CACE,2CAAA,CACA,qIAEE,SAAA,CAEF,0EACE,UAAA,CAKJ,oDACE,6CAAA,CACA,8CAAA,CAEF,yDACE,8CAAA,CAEF,wEACE,eAAA,CACA,8CAAA,CAKA,2EACE,kBAAA,CAGJ,mDACE,2CAAA,CACA,wFACE,YAAA,CACA,2CAAA,CAEF,qHACE,6CAAA,CAIF,oHAEE,2CAAA,CAEF,mEACE,2CAAA,CAIF,4DACE,4DAAA,CACA,6CAAA,CAEF,oEACE,4DAAA,CAKJ,gEACE,mDAAA,CAEF,8EACE,UAAA,CACA,6CAAA,CACA,0CAAA,CACA,uFACE,YAAA,CACA,gBAAA,CACA,aAAA,CAGJ,oEACE,6CAAA,CAEF,iEACE,6CAAA\",\"sourcesContent\":[\".kubeflow-notebook-controller {\\n  &__page {\\n    &-content {\\n      max-width: 1000px;\\n    }\\n    .pf-v6-c-menu-toggle {\\n      width: 70%;\\n    }\\n    .pf-v6-c-form__section:not(:first-child) {\\n      margin-top: var(--pf-t--global--spacer--sm);\\n      padding-top: var(--pf-t--global--spacer--sm);\\n      border-top: 1px solid var(--pf-t--global--border--color--default);\\n    }\\n  }\\n  &__env-var {\\n    gap: var(--pf-t--global--spacer--gutter--default);\\n    .pf-v6-c-form__section-title {\\n      margin-bottom: var(--pf-t--global--spacer--sm);\\n    }\\n    &-add-button {\\n      margin-left: var(--pf-t--global--spacer--md);\\n    }\\n    &-row {\\n      width: 85%;\\n      .pf-v6-c-menu-toggle {\\n        width: 70%;\\n      }\\n      & ~ & {\\n        padding-top: var(--pf-t--global--spacer--md);\\n        border-top: 1px solid var(--pf-t--global--border--color--default);\\n      }\\n    }\\n    &-field {\\n      margin-left: var(--pf-t--global--spacer--md);\\n      .pf-v6-c-form-control,\\n      .pf-v6-c-input-group {\\n        width: calc(70%);\\n      }\\n      &__value .pf-v6-c-form-control {\\n        width: 100%;\\n      }\\n    }\\n  }\\n  &__server-details {\\n    &-title {\\n      font-size: var(--pf-t--global--font--size--lg);\\n      padding-bottom: var(--pf-t--global--spacer--md);\\n    }\\n    &-image-name {\\n      padding-bottom: var(--pf-t--global--spacer--md);\\n    }\\n    .pf-v6-c-description-list {\\n      font-size: small;\\n      padding-bottom: var(--pf-t--global--spacer--xl);\\n    }\\n  }\\n  &__notebook-image {\\n    &-option {\\n      .pf-v6-c-radio__label {\\n        white-space: nowrap;\\n      }\\n    }\\n    &-tags {\\n      margin-left: var(--pf-t--global--spacer--md);\\n      .pf-v6-c-expandable-section__content {\\n        margin-top: 0;\\n        margin-left: var(--pf-t--global--spacer--md);\\n      }\\n      .kubeflow-data-projects__notebook-image-option:not(:last-of-type) {\\n        margin-bottom: var(--pf-t--global--spacer--sm);\\n      }\\n    }\\n    &-title {\\n      > svg,\\n      &-version {\\n        margin-left: var(--pf-t--global--spacer--xs);\\n      }\\n      .pf-v6-c-label {\\n        margin-left: var(--pf-t--global--spacer--sm);\\n      }\\n    }\\n    &-popover {\\n      &-title {\\n        font-weight: var(--pf-t--global--font--weight--heading--bold);\\n        margin-bottom: var(--pf-t--global--spacer--sm);\\n      }\\n      &-package-title {\\n        font-weight: var(--pf-t--global--font--weight--heading--bold);\\n      }\\n    }\\n  }\\n  &__start-server-modal {\\n    .pf-v6-c-list {\\n      font-size: var(--pf-t--global--font--size--body--sm);\\n    }\\n    .pf-v6-c-expandable-section {\\n      width: 100%;\\n      padding-right: var(--pf-t--global--spacer--lg);\\n      margin-top: var(--pf-t--global--spacer--sm);\\n      &__content {\\n        margin-top: 0;\\n        max-height: 250px;\\n        overflow: auto;\\n      }\\n    }\\n    .pf-v6-c-progress {\\n      margin-bottom: var(--pf-t--global--spacer--md);\\n    }\\n    .pf-v6-c-alert {\\n      margin-bottom: var(--pf-t--global--spacer--md);\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import * as React from 'react';\nimport { Popover } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport DashboardPopupIconButton from '../components/dashboard/DashboardPopupIconButton';\nconst FieldGroupHelpLabelIcon = ({ content }) => (React.createElement(Popover, { bodyContent: content },\n    React.createElement(DashboardPopupIconButton, { icon: React.createElement(OutlinedQuestionCircleIcon, null), \"aria-label\": \"More info\" })));\nexport default FieldGroupHelpLabelIcon;\n//# sourceMappingURL=FieldGroupHelpLabelIcon.js.map","export var AlertVariant;\n(function (AlertVariant) {\n    AlertVariant[\"success\"] = \"success\";\n    AlertVariant[\"danger\"] = \"danger\";\n    AlertVariant[\"warning\"] = \"warning\";\n    AlertVariant[\"info\"] = \"info\";\n    AlertVariant[\"custom\"] = \"custom\";\n})(AlertVariant || (AlertVariant = {}));\nexport var NotificationActionTypes;\n(function (NotificationActionTypes) {\n    NotificationActionTypes[\"ADD_NOTIFICATION\"] = \"add_notification\";\n    NotificationActionTypes[\"DELETE_NOTIFICATION\"] = \"delete_notification\";\n})(NotificationActionTypes || (NotificationActionTypes = {}));\n//# sourceMappingURL=common.js.map","import * as React from 'react';\nimport { sectionTypeBackgroundColor, typedBackgroundColor, sectionTypeIconColor, typedIconColor, } from '../../components/design/utils';\nimport TypedObjectIcon from '../../components/design/TypedObjectIcon';\nconst HeaderIcon = ({ size = 40, padding = 4, display = 'inline-block', type, sectionType, }) => (React.createElement(\"div\", { style: {\n        display,\n        width: size,\n        height: size,\n        padding,\n        borderRadius: size / 2,\n        background: sectionType\n            ? sectionTypeBackgroundColor(sectionType)\n            : typedBackgroundColor(type),\n        color: sectionType ? sectionTypeIconColor(sectionType) : typedIconColor(type),\n    } },\n    React.createElement(TypedObjectIcon, { resourceType: type, style: { width: size - padding * 2, height: size - padding * 2 } })));\nexport default HeaderIcon;\n//# sourceMappingURL=HeaderIcon.js.map","import * as React from 'react';\nimport {\n  useDeepCompareMemoize,\n  FetchState,\n  FetchStateCallbackPromise,\n  useFetchState,\n} from 'mod-arch-core';\nimport { ModelRegistry } from '~/app/types';\nimport { getListModelRegistries } from '~/app/api/k8s';\n\nconst useModelRegistries = (queryParams: Record<string, unknown>): FetchState<ModelRegistry[]> => {\n  const paramsMemo = useDeepCompareMemoize(queryParams);\n\n  const listModelRegistries = React.useMemo(\n    () => getListModelRegistries('', paramsMemo),\n    [paramsMemo],\n  );\n  const callback = React.useCallback<FetchStateCallbackPromise<ModelRegistry[]>>(\n    (opts) => listModelRegistries(opts),\n    [listModelRegistries],\n  );\n  return useFetchState(callback, [], { initialPromisePurity: true });\n};\n\nexport default useModelRegistries;\n","import * as React from 'react';\nimport { useQueryParamNamespaces } from 'mod-arch-core';\nimport { ModelRegistry } from '~/app/types';\nimport useModelRegistries from '~/app/hooks/useModelRegistries';\n\nexport type ModelRegistrySelectorContextType = {\n  modelRegistriesLoaded: boolean;\n  modelRegistriesLoadError?: Error;\n  modelRegistries: ModelRegistry[];\n  preferredModelRegistry: ModelRegistry | undefined;\n  updatePreferredModelRegistry: (modelRegistry: ModelRegistry | undefined) => void;\n  //refreshRulesReview: () => void; TODO: [Midstream] Reimplement this\n};\n\ntype ModelRegistrySelectorContextProviderProps = {\n  children: React.ReactNode;\n};\n\nexport const ModelRegistrySelectorContext = React.createContext<ModelRegistrySelectorContextType>({\n  modelRegistriesLoaded: false,\n  modelRegistriesLoadError: undefined,\n  modelRegistries: [],\n  preferredModelRegistry: undefined,\n  updatePreferredModelRegistry: () => undefined,\n  //refreshRulesReview: () => undefined,\n});\n\nexport const ModelRegistrySelectorContextProvider: React.FC<\n  ModelRegistrySelectorContextProviderProps\n> = ({ children, ...props }) => (\n  <EnabledModelRegistrySelectorContextProvider {...props}>\n    {children}\n  </EnabledModelRegistrySelectorContextProvider>\n);\n\nconst EnabledModelRegistrySelectorContextProvider: React.FC<\n  ModelRegistrySelectorContextProviderProps\n> = ({ children }) => {\n  // TODO: [Midstream] Add area check for enablement\n\n  const queryParams = useQueryParamNamespaces();\n\n  const [modelRegistries, isLoaded, error] = useModelRegistries(queryParams);\n  const [preferredModelRegistry, setPreferredModelRegistry] =\n    React.useState<ModelRegistrySelectorContextType['preferredModelRegistry']>(undefined);\n\n  const firstModelRegistry = modelRegistries.length > 0 ? modelRegistries[0] : null;\n\n  const contextValue = React.useMemo(\n    () => ({\n      modelRegistriesLoaded: isLoaded,\n      modelRegistriesLoadError: error,\n      modelRegistries,\n      preferredModelRegistry: preferredModelRegistry ?? firstModelRegistry ?? undefined,\n      updatePreferredModelRegistry: setPreferredModelRegistry,\n      // refreshRulesReview,\n    }),\n    [isLoaded, error, modelRegistries, preferredModelRegistry, firstModelRegistry],\n  );\n\n  return (\n    <ModelRegistrySelectorContext.Provider value={contextValue}>\n      {children}\n    </ModelRegistrySelectorContext.Provider>\n  );\n};\n","import { createIcon } from '../createIcon';\n\nexport const EyeSlashIconConfig = {\n  name: 'EyeSlashIcon',\n  height: 512,\n  width: 640,\n  svgPath: \"M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z\",\n  yOffset: 0,\n  xOffset: 0,\n  svgClassName: undefined,\n};\n\nexport const EyeSlashIcon = createIcon(EyeSlashIconConfig);\n\nexport default EyeSlashIcon;","import { DeploymentMode, asEnumMember } from 'mod-arch-core';\nimport { Theme } from 'mod-arch-kubeflow';\n\nconst STYLE_THEME = asEnumMember(process.env.STYLE_THEME, Theme) || Theme.Patternfly;\nconst DEPLOYMENT_MODE =\n  asEnumMember(process.env.DEPLOYMENT_MODE, DeploymentMode) || DeploymentMode.Federated;\nconst DEV_MODE = process.env.APP_ENV === 'development';\nconst POLL_INTERVAL = process.env.POLL_INTERVAL ? parseInt(process.env.POLL_INTERVAL) : 30000;\nconst KUBEFLOW_USERNAME = process.env.KUBEFLOW_USERNAME || 'user@example.com';\nconst IMAGE_DIR = process.env.IMAGE_DIR || 'images';\nconst LOGO_LIGHT = process.env.LOGO || 'logo-light-theme.svg';\nconst MANDATORY_NAMESPACE = process.env.MANDATORY_NAMESPACE || undefined;\nconst URL_PREFIX = '/model-registry';\nconst BFF_API_VERSION = 'v1';\nconst COMPANY_URI = process.env.COMPANY_URI || 'oci://kubeflow.io';\n\nexport {\n  STYLE_THEME,\n  POLL_INTERVAL,\n  DEV_MODE,\n  KUBEFLOW_USERNAME,\n  IMAGE_DIR,\n  LOGO_LIGHT,\n  URL_PREFIX,\n  DEPLOYMENT_MODE,\n  BFF_API_VERSION,\n  MANDATORY_NAMESPACE,\n  COMPANY_URI,\n};\n\nexport const FindAdministratorOptions = [\n  'The person who gave you your username, or who helped you to log in for the first time',\n  'Someone in your IT department or help desk',\n  'A project manager or developer',\n];\n","import React from 'react';\nimport {\n  BrowserStorageContextProvider,\n  NotificationContextProvider,\n  ModularArchContextProvider,\n  ModularArchConfig,\n  DeploymentMode,\n} from 'mod-arch-core';\nimport { ThemeProvider, Theme } from 'mod-arch-kubeflow';\nimport { ModelRegistrySelectorContextProvider } from '~/app/context/ModelRegistrySelectorContext';\nimport ModelRegistrySettingsRoutes from '~/app/pages/settings/ModelRegistrySettingsRoutes';\nimport { BFF_API_VERSION, URL_PREFIX } from '~/app/utilities/const';\n\nconst modularArchConfig: ModularArchConfig = {\n  deploymentMode: DeploymentMode.Federated,\n  URL_PREFIX,\n  BFF_API_VERSION,\n  mandatoryNamespace: 'odh-model-registries',\n};\n\nconst ModelRegistryWrapper: React.FC = () => {\n  return (\n    <ModularArchContextProvider config={modularArchConfig}>\n      <ThemeProvider theme={Theme.Patternfly}>\n        <BrowserStorageContextProvider>\n          <NotificationContextProvider>\n            <ModelRegistrySelectorContextProvider>\n              <ModelRegistrySettingsRoutes />\n            </ModelRegistrySelectorContextProvider>\n          </NotificationContextProvider>\n        </BrowserStorageContextProvider>\n      </ThemeProvider>\n    </ModularArchContextProvider>\n  );\n};\n\nexport default ModelRegistryWrapper;\n","import { createIcon } from '../createIcon';\n\nexport const InProgressIconConfig = {\n  name: 'InProgressIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: \"M513.417211,16.013668 L513.417211,112.013668 C513.406007,120.539653 520.082422,127.576718 528.597211,128.013668 C732.697211,136.513668 896.147211,305.013668 896.147211,511.343668 C896.147211,723.013668 724.007211,895.163668 512.417211,895.163668 C437.186239,895.277345 363.602574,873.135095 300.927211,831.523668 C294.58293,827.2982 286.138663,828.135095 280.747211,833.523668 L211.807211,902.353668 C208.502935,905.676185 206.82123,910.280199 207.20607,914.950237 C207.590911,919.620275 210.00361,923.886884 213.807211,926.623668 C300.709573,989.398037 405.213535,1023.13146 512.417211,1023.01398 C794.537211,1023.01398 1023.91724,793.433668 1023.91724,511.413668 C1024.00721,235.103668 804.007211,9.22366802 529.897211,0.00645736761 C525.571205,-0.116171039 521.377128,1.51204372 518.271915,4.52681369 C515.166702,7.54158367 513.415263,11.6857144 513.417211,16.013668 M97.1272107,212.923668 C64.2190689,258.479443 39.0698895,309.162997 22.6972107,362.923668 C21.2705092,367.756559 22.2039184,372.979173 25.2163356,377.018685 C28.2287528,381.058197 32.9681443,383.442545 38.0072107,383.453683 L139.407211,383.453683 C145.970195,383.46249 151.873012,379.462528 154.297211,373.363668 C164.307669,347.593304 177.068112,322.977652 192.357211,299.943668 C196.579666,293.633658 195.741339,285.216847 190.357211,279.863668 L121.497211,211.013668 C118.186635,207.662531 113.567544,205.940538 108.871166,206.30669 C104.174788,206.672841 99.8783994,209.089927 97.1272107,212.913668 M112.907211,511.433663 L17.0072107,511.433663 C12.679257,511.433663 8.5351263,513.183159 5.52035633,516.288373 C2.50558635,519.393586 0.877371594,523.587662 1.00721065,527.913668 C4.13104542,629.408217 37.6085847,727.635936 97.1172107,809.913668 C99.8539943,813.717268 104.120603,816.129968 108.790642,816.514809 C113.46068,816.899649 118.064693,815.217944 121.387211,811.913668 L190.217211,743.073668 C195.605784,737.682216 196.442679,729.237949 192.217211,722.893668 C153.520825,664.580171 131.611534,596.745437 128.887211,526.813668 C128.553964,518.220138 121.487197,511.427209 112.887211,511.433663\",\n  yOffset: 0,\n  xOffset: 0,\n  svgClassName: undefined,\n};\n\nexport const InProgressIcon = createIcon(InProgressIconConfig);\n\nexport default InProgressIcon;"],"names":["EyeIconConfig","name","height","width","svgPath","yOffset","xOffset","svgClassName","undefined","EyeIcon","getListModelRegistries","hostPath","queryParams","opts","then","response","data","Error","getNamespaces","getGroups","getRoleBindings","items","getModelRegistrySettings","modelRegistryId","listModelRegistrySettings","createModelRegistrySettings","deleteModelRegistrySettings","createRoleBinding","patchRoleBinding","roleBindingName","deleteRoleBinding","generateRoleBindingPermissions","namespace","rbSubjectKind","rbSubjectName","rbRoleRefName","rbRoleRefKind","rbLabels","ownerReference","resource","owner","blockOwnerDeletion","ownerReferences","metadata","uid","find","r","push","apiVersion","kind","addOwnerReference","labels","roleRef","apiGroup","subjects","component","field","className","isMUITheme","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","children","wrap","style","display","Flex","gap","default","alignItems","FlexItem","Popover","position","bodyContent","Stack","hasGutter","StackItem","DescriptionList","isCompact","isHorizontal","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","ClipboardCopy","hoverTip","clickTip","variant","DashboardPopupIconButton","icon","paddingTop","paddingBottom","AppContext","config","URL_PREFIX","BFF_API_VERSION","___CSS_LOADER_EXPORT___","module","id","content","AlertVariant","NotificationActionTypes","size","padding","type","sectionType","borderRadius","background","color","resourceType","paramsMemo","useDeepCompareMemoize","listModelRegistries","callback","useFetchState","initialPromisePurity","ModelRegistrySelectorContext","modelRegistriesLoaded","modelRegistriesLoadError","modelRegistries","preferredModelRegistry","updatePreferredModelRegistry","ModelRegistrySelectorContextProvider","props","EnabledModelRegistrySelectorContextProvider","useQueryParamNamespaces","isLoaded","error","setPreferredModelRegistry","firstModelRegistry","length","contextValue","Provider","value","EyeSlashIconConfig","EyeSlashIcon","Patternfly","Federated","parseInt","modularArchConfig","deploymentMode","mandatoryNamespace","theme","InProgressIconConfig","InProgressIcon"],"sourceRoot":""}