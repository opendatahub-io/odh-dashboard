{
  "extends": "../.eslintrc",
  "rules": {
    "no-restricted-properties": [
      "error",
      {
        "property": "toString",
        "message": "e.toString() should be fastify.log.error(e, 'your string'). Other use-cases should avoid obj.toString() on principle. Craft the string you want instead."
      },
      {
        "object": "Promise",
        "property": "allSettled",
        "message": "Avoid using Promise.allSettled, use allSettledPromises utility function instead."
      },
      {
        "property": "sort",
        "message": "Avoid using .sort, use .toSorted instead."
      }
    ],
    "jsx-a11y/no-autofocus": ["off", { "ignoreNonDOM": true }],
    "jsx-a11y/anchor-is-valid": [
      "off",
      {
        "components": ["Link"],
        "specialLink": ["to"],
        "aspects": ["noHref", "invalidHref", "preferButton"]
      }
    ],
    "arrow-body-style": "off",
    "curly": "off",
    "no-only-tests/no-only-tests": "off",
    "@typescript-eslint/default-param-last": "off",
    "@typescript-eslint/dot-notation": ["off", { "allowKeywords": true }],
    "@typescript-eslint/lines-between-class-members": [
      "off",
      "always",
      { "exceptAfterSingleLine": false }
    ],
    "@typescript-eslint/method-signature-style": "off",
    "@typescript-eslint/naming-convention": [
      "off",
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ],
    "@typescript-eslint/no-unused-expressions": [
      "off",
      {
        "allowShortCircuit": false,
        "allowTernary": false,
        "allowTaggedTemplates": false
      }
    ],
    "@typescript-eslint/no-redeclare": "off",
    "@typescript-eslint/no-shadow": "off",
    "@typescript-eslint/return-await": ["off", "in-try-catch"],
    "camelcase": "off",
    "no-else-return": ["off", { "allowElseIf": false }],
    "eqeqeq": ["off", "always", { "null": "ignore" }],
    "object-shorthand": ["off", "always"],
    "no-console": "off",
    "no-param-reassign": [
      "off",
      {
        "props": true,
        "ignorePropertyModificationsFor": ["acc", "e"],
        "ignorePropertyModificationsForRegex": ["^assignable[A-Z]"]
      }
    ],
    "@typescript-eslint/no-base-to-string": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-unnecessary-condition": "off",
    "prefer-destructuring": [
      "off",
      {
        "VariableDeclarator": {
          "array": false,
          "object": true
        },
        "AssignmentExpression": {
          "array": true,
          "object": false
        }
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "import/order": [
      "off",
      {
        "pathGroups": [
          {
            "pattern": "~/**",
            "group": "external",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"],
        "groups": [
          "builtin",
          "external",
          "internal",
          "index",
          "sibling",
          "parent",
          "object",
          "unknown"
        ]
      }
    ],
    "import/newline-after-import": "off",
    "import/no-duplicates": "off",
    "import/no-named-as-default": "off",
    "import/no-extraneous-dependencies": [
      "off",
      {
        "devDependencies": true,
        "optionalDependencies": true
      }
    ],
    "no-relative-import-paths/no-relative-import-paths": [
      "off",
      {
        "allowSameFolder": true,
        "rootDir": "src",
        "prefix": "~"
      }
    ],
    "array-callback-return": ["off", { "allowImplicit": true }],
    "prefer-template": "off",
    "no-lone-blocks": "off",
    "no-lonely-if": "off",
    "no-promise-executor-return": "off",
    "no-restricted-globals": [
      "off",
      {
        "name": "isFinite",
        "message": "Use Number.isFinite instead https://github.com/airbnb/javascript#standard-library--isfinite"
      },
      {
        "name": "isNaN",
        "message": "Use Number.isNaN instead https://github.com/airbnb/javascript#standard-library--isnan"
      }
    ],
    "no-sequences": "off",
    "no-undef-init": "off",
    "no-unneeded-ternary": ["off", { "defaultAssignment": false }],
    "no-useless-computed-key": "off",
    "no-useless-return": "off",
    "symbol-description": "off",
    "yoda": "off",
    "func-names": "off"
  }
}