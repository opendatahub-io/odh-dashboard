---
# yamllint disable rule:line-length
name: Comment Quality Gates Summary

'on':
  workflow_run:
    workflows: ["Modular Architecture - Quality Gates"]
    types:
      - completed

permissions:
  contents: read
  actions: read
  pull-requests: write

jobs:
  comment-pr:
    name: Post Quality Gates Summary
    runs-on: ubuntu-latest
    if: >-
      ${{ github.event.workflow_run.event == 'pull_request' &&
          (github.event.workflow_run.conclusion == 'success' ||
           github.event.workflow_run.conclusion == 'failure') }}
    steps:
      - name: Debug workflow run info
        run: |
          echo "Workflow run event: ${{ github.event.workflow_run.event }}"
          echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Workflow run head SHA: ${{ github.event.workflow_run.head_sha }}"
          echo "Workflow run ID: ${{ github.event.workflow_run.id }}"

      - name: Download Quality Gates Summary
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: quality-gates-summary
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Get PR number from workflow_run payload
        id: get-pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.workflow_run.pull_requests && context.payload.workflow_run.pull_requests[0];
            if (!pr) {
              core.setFailed('‚ùå No PR found on workflow_run payload');
              return;
            }
            console.log('üìã Found PR #' + pr.number);
            core.setOutput('pr-number', pr.number);

      - name: Ensure summary presence (optional diagnostics)
        run: |
          if [ -f "quality-gates-summary.md" ]; then
            echo "Summary file present (quality-gates-summary.md)"
          else
            echo "Summary file missing; helper will post fallback"
          fi

      - name: Post or update PR comment
        if: steps.get-pr.outputs.pr-number
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const prNumber = Number('${{ steps.get-pr.outputs.pr-number }}');
            let body;
            try {
              body = fs.readFileSync('quality-gates-summary.md', 'utf8');
            } catch (e) {
              body = '## üö¶ Modular Architecture Quality Gates Results\n\n' +
                     '‚ùå Failed to load detailed summary. Check workflow logs.';
            }
            console.log(`üìã Posting to PR #${prNumber}`);
            console.log(`üìä Summary length: ${body.length} characters`);
            try {
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber
              });
              const marker = 'üö¶ Modular Architecture Quality Gates Results';
              const existing = comments.find(c => c.user.type === 'Bot' && c.body.includes(marker));
              if (existing) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existing.id,
                  body
                });
                console.log('‚úÖ Updated existing quality gates comment');
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  body
                });
                console.log('‚úÖ Created new quality gates comment');
              }
            } catch (error) {
              console.log('‚ùå Failed to post comment:', error.message);
            }
