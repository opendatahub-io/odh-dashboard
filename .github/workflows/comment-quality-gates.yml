name: 'Quality Gates - PR Comment Helper'

on:
  workflow_run:
    workflows: ['Modular Architecture - Quality Gates']
    types:
      - completed

permissions:
  contents: read
  pull-requests: write

jobs:
  comment:
    if: ${{ github.event.workflow_run.event == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const runId = context.payload.workflow_run.id;
            const {owner, repo} = context.repo;
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({ owner, repo, run_id: runId });
            const artifact = artifacts.data.artifacts.find(a => a.name.startsWith('quality-gates-summary'));
            if (!artifact) {
              core.setFailed('No quality-gates-summary artifact found');
              return;
            }
            const archive = await github.rest.actions.downloadArtifact({ owner, repo, artifact_id: artifact.id, archive_format: 'zip' });
            require('fs').writeFileSync('artifact.zip', Buffer.from(archive.data));
      - name: Unzip artifact
        run: |
          unzip -o artifact.zip
          ls -la
      - name: Post comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('quality-gates-summary.md', 'utf8');
            const prUrl = context.payload.workflow_run.pull_requests?.[0]?.url;
            if (!prUrl) {
              core.setFailed('No associated PR found');
              return;
            }
            const { data: pr } = await github.request(prUrl);
            await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number, body: summary }); 