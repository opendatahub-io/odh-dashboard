name: Create and Release ODH Dashboard
on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        description: The release version in format vX.YY.Z

env:
  QUAY_ODH_DASHBOARD_IMAGE_REPO: quay.io/opendatahub/odh-dashboard

jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Check authorized user
        run: |
          AUTHORIZED_USERS_FILE=".github/workflows/authorized-tag-creators.txt"
          if [[ ! -f "$AUTHORIZED_USERS_FILE" ]]; then
            echo "Authorized users file not found!"
            exit 1
          fi
          if ! grep -q "^${GITHUB_ACTOR}$" "$AUTHORIZED_USERS_FILE"; then
            echo "User ${GITHUB_ACTOR} is not authorized to run this workflow."
            exit 1
          fi
      - name: Install podman
        shell: bash
        run: |
          sudo apt-get -y update
          sudo apt-get -y install podman

  Create-Branch:
    needs: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Create ${{ github.event.inputs.RELEASE_VERSION }}-odh-release branch
        shell: bash
        run: |
          git checkout -b ${{ github.event.inputs.RELEASE_VERSION }}-odh-release
          git push origin ${{ github.event.inputs.RELEASE_VERSION }}-odh-release

  Tag-Image:
    needs: [Setup, Create-Branch]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Retrieve latest SHA from ${{ github.event.inputs.RELEASE_VERSION }}-odh-release branch
        shell: bash
        run: |
          echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
      - name: Pull Quay repository
        shell: bash
        run: |
          podman pull $QUAY_ODH_DASHBOARD_IMAGE_REPO:main-${{ env.SHORT_SHA }}
      - name: Create new release tag off of latest main-${{ env.SHORT_SHA }}
        shell: bash
        run: |
          podman tag $QUAY_ODH_DASHBOARD_IMAGE_REPO:main-${{ env.SHORT_SHA }} $QUAY_ODH_DASHBOARD_IMAGE_REPO:${{ github.event.inputs.RELEASE_VERSION }}-odh
      - name: Login to quay.io
        shell: bash
        env:
          QUAY_TOKEN: ${{ secrets.QUAY_ROBOT_TOKEN }}
          QUAY_ROBOT_USERNAME: ${{ secrets.QUAY_ROBOT_USERNAME }}
        run: |
          podman login quay.io -u ${QUAY_ROBOT_USERNAME} -p ${QUAY_TOKEN}
      - name: Push the latest release tag to Quay
        shell: bash
        run: |
          podman push $QUAY_ODH_DASHBOARD_IMAGE_REPO:${{ github.event.inputs.RELEASE_VERSION }}-odh

  Create-PR:
    needs: [Setup, Create-Branch, Tag-Image]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - uses: fregante/setup-git-user@v2
      - name: Pull latest release tag ${{ github.event.inputs.RELEASE_VERSION }}-odh from Quay
        shell: bash
        run: |
          podman pull $QUAY_ODH_DASHBOARD_IMAGE_REPO:${{ github.event.inputs.RELEASE_VERSION }}-odh
      - name: Get full SHA digest for Tag-Image
        shell: bash
        run: |
          echo "DIGEST=$(podman images --format "{{.Digest}}" --filter reference=$QUAY_ODH_DASHBOARD_IMAGE_REPO:${{ github.event.inputs.RELEASE_VERSION }}-odh | sed -n 1p)" >> $GITHUB_ENV
      - name: Create a branch for the PR
        shell: bash
        run: |
          git checkout -b '${{ github.event.inputs.RELEASE_VERSION }}-PR'
      - name: Replace odh/params.env version
        shell: bash
        run: |
          sed -i "s/:main/@${{ env.DIGEST }}/g" manifests/odh/params.env
      - name: Replace version in frontend .env
        shell: bash
        run: |
          sed -i '/INTERNAL_DASHBOARD_VERSION/c\INTERNAL_DASHBOARD_VERSION=${{ github.event.inputs.RELEASE_VERSION }}' frontend/.env
      - name: Create PR
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add manifests/odh/params.env frontend/.env
          git commit -m "Edit version info for ${{ github.event.inputs.RELEASE_VERSION }}"
          git push origin ${{ github.event.inputs.RELEASE_VERSION }}-PR
          gh pr create --base main --head ${{ github.event.inputs.RELEASE_VERSION }}-PR \
            --title "Update versions for ${{ github.event.inputs.RELEASE_VERSION }}" \
            --assignee ${GITHUB_ACTOR} \
            --body "Edited the params.env and .env files to use the new release version ${{ github.event.inputs.RELEASE_VERSION }}" \
            --draft

  Release-Notes:
    needs: [Setup, Create-Branch, Tag-Image]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Create Tag and Release Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.event.inputs.RELEASE_VERSION }}" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${{ github.event.inputs.RELEASE_VERSION }}" \
              --latest=false \
              --generate-notes
